
<div id="products" class="container" data-bind="foreach: parks, visible: view()=='list'">
    <div class="row">
        <div class="col-xs-6 col-md-5">
            <blockquote>
                <p data-bind="text: name"></p>
                <small data-bind="text: description"></small>
            </blockquote>
        </div>
        <div class="col-xs-4 col-md-2">
            <ul style="margin-top:20px" class="nav nav-pills nav-stacked" data-bind="visible: place()>0 && occupied()==''">
                <li class="active">
                    <a href="#" data-bind="click: $root.occupyPlace"><span class=" badge pull-right" data-bind="html: '可用:'+place()"></span>预订车位</a>
                </li>
            </ul>
            <button style="margin-top:20px" data-bind="visible: place()==0" type="button" class="btn btn-default btn-lg" disabled="disabled">暂无车位</button>
            <h4 data-bind="visible: occupied()!=''" class="text-center"><span class="label label-info" data-bind="text: occupied"></span></h4>
            <button data-bind="visible: occupied()!='', click: $root.releasePlace" type="button" class="btn btn-primary btn-block">取消预订</button>
        </div>
    </div>
</div>

<div id="allMap" data-bind="visible: view()=='map'">mapPlacehold</div>

@section topMenu {
    <ul class="nav navbar-nav">
        
    </ul>
    <button data-bind="visible: view()=='map', click: markCP" type="button" class="btn btn-primary navbar-btn">
        <span class="glyphicon glyphicon-screenshot"></span>我的位置
    </button>
    <ul class="nav navbar-nav navbar-right">
        <li data-bind="visible: view()=='map'"><a href=" #" data-bind="click: changeView">列表</a></li>
        <li data-bind="visible: view()=='list'"><a href=" #" data-bind="click: changeView">地图</a></li>
    </ul>
}

@section scripts {
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=rFUmUxsrkgojO2oEu3rdtzYW"></script>
    <script>
        function Park(park) {
            var self = this;
            self.id = ko.observable(park.Id);
            self.name = ko.observable(park.Name);
            self.place = ko.observable(park.PlaceCount);
            self.character = ko.observable(park.Character);
            self.price = ko.observable(park.Price);
            self.ot = ko.observable(park.OpeningTime);
            self.description = ko.computed(function () {
                return (self.character() + '  ' + self.price() + '元/小时  ' + self.ot() + '营业');
            });
            self.occupied = ko.observable("");
        }

        function ParksViewModel() {
            var self = this;

            self.parks = ko.observableArray([]);
            self.view = ko.observable("list");

            self.occupyPlace = function (park) {
                park.occupied('已经预订09:00-12:00');
            };

            self.releasePlace = function (park) {
                park.occupied('');
            };

            self.changeView = function () {
                if (self.view() == 'list') {
                    self.view('map');
                } else {
                    self.view('list');
                }
            };

            self.markCP = function () {
                navigator.geolocation.getCurrentPosition(geoCpHandler, geoErrorHandler, 
                 { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true });
            };

            var uri = '/api/parks';
            $.getJSON(uri, function (allData) {
                var p = $.map(allData, function (item) { return new Park(item) });
                self.parks(p);
            });
        }

        function geoCpHandler(position) {

            alert('Latitude: ' + position.coords.latitude + '\n' +
            'Longitude: ' + position.coords.longitude + '\n' +
            'Altitude: ' + position.coords.altitude + '\n' +
            'Accuracy: ' + position.coords.accuracy + '\n' +
            'Altitude Accuracy: ' + position.coords.altitudeAccuracy + '\n' +
            'Heading: ' + position.coords.heading + '\n' +
            'Speed: ' + position.coords.speed + '\n' +
            'Timestamp: ' + position.timestamp + '\n');

            var p = new BMap.Point(position.coords.longitude, position.coords.latitude);
            map.centerAndZoom(p, 15);
            if (currentMarker != null) {
                map.removeOverlay(currentMarker);
            }
            currentMarker = new BMap.Marker(p, { title: "当前位置" });
            map.addOverlay(currentMarker);
        };

        function geoErrorHandler(error) {
            alert('code: ' + error.code + '\n' +
                    'message: ' + error.message + '\n');
        };

        $(document).ready(function () {
            ko.applyBindings(new ParksViewModel());

            map = new BMap.Map("allMap");
            map.centerAndZoom(new BMap.Point(116.404, 39.915), 11);
            map.addControl(new BMap.NavigationControl());
            currentMarker = new BMap.Marker(new BMap.Point(116.404, 39.915));
        });
    </script>
}






